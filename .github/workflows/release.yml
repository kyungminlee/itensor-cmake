name: Upload Release Asset
on: ["push"]
  # push:
  #   branch:
  #     - main
  #   tags:
  #     - 'v*'
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
  release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            BLA_VENDOR: OpenBLAS
            platform: ubuntu
            asset_ext: tgz
          - os: macos-latest
            BLA_VENDOR: Apple
            platform: macos
            asset_ext: tgz
          - os: windows-latest
            BLA_VENDOR: OpenBLAS
            platform: windows
            asset_ext: zip
    runs-on: ${{ matrix.os }}
    needs: create_release
    steps:
    - uses: actions/checkout@v2
    - name: Check out submodule
      run: git submodule update --init
    - name: Install OpenBLAS
      if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.BLA_VENDOR == 'OpenBLAS' }}
      run: sudo apt-get install libopenblas-dev liblapacke-dev
    - name: Make CMake build directory
      run: cmake -B build -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/itensor-${{ github.sha }} -DBLA_VENDOR=${{ matrix.BLA_VENDOR }}
    - name: Install Release
      run: cmake --build build --target install --config Release
    - name: Package (tgz)
      if: ${{ !startsWith(matrix.os, 'windows') }}
      run: |
        tar cvzf itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }} -C ${{ github.workspace }} itensor-${{ github.sha }}
    - name: Package (zip)
      if: ${{ startsWith(matrix.os, 'windows') }}
      run: |
        7z a itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }} ${{ github.workspace }}\itensor-${{ github.sha }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }}
        path: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }}
        retention-days: 3
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
    #   with:
    #     upload_url: ${{ needs.create_release.outputs.upload_url }}
    #     asset_path: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }}
    #     asset_name: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }}
    #     asset_content_type: application/${{ matrix.asset_ext }}
  release-deb:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            BLA_VENDOR: OpenBLAS
            platform: ubuntu
    needs: release
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.tgz
    - name: List
      run: ls -al
    # - name: Install Release
    #   run: cmake --build build --target install --config Release
    # - name: Create DEB configuration
    #   run: |
    #     mkdir -p ${{ github.workspace }}/installdir/DEBIAN/
    #     cat > ${{ github.workspace }}/installdir/DEBIAN/control <<EOS
    #     Package: itensor-dev
    #     Version: 3.1.5
    #     Section: science
    #     Priority: optional
    #     Architecture: amd64
    #     Essential: no
    #     Depends: liblapacke-dev, libopenblas-dev
    #     Maintainer: Kyungmin Lee <kyungmin.lee.42@gmail.com>
    #     Description: ITensor package
    #     EOS
    # - name: Package (deb)
    #   run: dpkg-deb --build ${{ github.workspace }}/installdir itensor-dev_${{ github.sha }}_amd64.deb
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: itensor-dev_${{ github.sha }}_amd64.deb
    #     path: itensor-dev_${{ github.sha }}_amd64.deb
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
    #   with:
    #     upload_url: ${{ needs.create_release.outputs.upload_url }}
    #     asset_path: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }}
    #     asset_name: itensor-${{ github.sha }}-${{ matrix.BLA_VENDOR }}-${{ matrix.platform }}-x86_64.${{ matrix.asset_ext }}
    #     asset_content_type: application/${{ matrix.asset_ext }}